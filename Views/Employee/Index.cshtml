@model HR_Products.ViewModels.EmployeeListViewModel

<h2 class="text-center mb-5">List of Employees</h2>
<link rel="stylesheet" href="~/css/site.css" />
<div class="row mb-5">
    <div class="col">
        <a class="btn btn-primary" asp-controller="Employee" asp-action="Create">Add Employee</a>
    </div>
    <div class="col text-end">
        <input type="text" id="searchInput" class="form-control" placeholder="Search Employees" />
    </div>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Profile</th>
            <th>Employee Code</th>
            <th>Name</th>
            <th>NRIC</th>
            <th>Email</th>
            <th>Role</th>
            <th>Department</th>
            <th>Position</th>
            <th>Join Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="employeeTableBody">
        @foreach (var item in Model.Employees)  
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.ProfilePic))
                    {
                        <img src="@Url.Content("~/images/profile/" + item.ProfilePic)"
                             alt="Profile Picture"
                             style="width: 50px; height: 50px; object-fit: cover; border-radius: 50%;" />
                    }
                    else
                    {
                        <img src="@Url.Content("~/images/profile/default_profile.png")"
                             alt="Default Profile Picture"
                             style="width: 50px; height: 50px; object-fit: cover; border-radius: 50%;" />
                    }
                </td>
                <td>@item.EmpeCode</td>
                <td>@item.EmpeName</td>
                <td>@item.EmgcConctName</td>
                <td>@item.Email</td>
                <td>@item.JobTitle</td>
                <td>@item.PostalCode</td>
                <td>@item.Status</td>
                <td>@item.JoinDate.ToString("MM/dd/yyyy")</td>
                <td style="white-space: nowrap">
                    <a class="btn btn-warning btn-sm" asp-controller="Employee" asp-action="Edit" asp-route-id="@item.EmpeId">Edit</a>
                    <a class="btn btn-danger btn-sm" asp-controller="Employee" asp-action="Delete" onclick="return window.confirm('Are you sure to delete this record')" asp-route-id="@item.EmpeId">Delete</a>
                    <a class="btn btn-success btn-sm" asp-controller="Employee" asp-action="Detail" asp-route-id="@item.EmpeId">Detail</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Rest of your view remains the same -->

<div class="mt-4 d-flex justify-content-end">
    <nav>
        <ul class="pagination pagination-sm mb-0" id="paginationUl">
            <li class="page-item" id="prevBtn">
                <a class="page-link" href="#">Previous</a>
            </li>
            <li> elements by JavaScript --}}

            <li class="page-item" id="nextBtn">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>

<div class="mt-5 d-flex justify-content-start">
    @if (Model.IsAdminOrHrAdmin)
    {
        <a class="btn btn-outline-warning btn-md" style="width: 146px;" asp-controller="Admin" asp-action="Dashboard" role="button">Back</a>
    }
    else
    {
        <a class="btn btn-outline-warning btn-md" style="width: 100px;" href="javascript:history.back()" role="button">Back</a>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const employeeTableBody = document.getElementById("employeeTableBody");
        let tableRows = Array.from(employeeTableBody.getElementsByTagName("tr")); 

        const prevBtn = document.getElementById("prevBtn");
        const nextBtn = document.getElementById("nextBtn");
        const paginationUl = document.getElementById("paginationUl"); 

        let currentPage = 1;
        const rowsPerPage = 5; 
        let filteredRows = [...tableRows]; 

        
        function displayRowsForPage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            
            tableRows.forEach(row => row.style.display = "none");
            filteredRows.slice(start, end).forEach(row => row.style.display = "");

            updatePaginationButtons();
            generatePageNumbers();
        }
        function updatePaginationButtons() {
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            prevBtn.classList.toggle("disabled", currentPage === 1);
            nextBtn.classList.toggle("disabled", currentPage === totalPages || totalPages === 0);
        }
        function generatePageNumbers() {
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            const maxPageNumbersToShow = 5;

            for (let i = paginationUl.children.length - 2; i > 0; i--) {
                paginationUl.children[i].remove();
            }

            for (let i = 1; i <= Math.min(totalPages, maxPageNumbersToShow); i++) {
                addPageNumber(i);
            }
        }

        function addPageNumber(pageNum) {
            const li = document.createElement("li");
            li.className = "page-item";

            const a = document.createElement("a");
            a.className = "page-link";
            a.href = "#"; 
            a.textContent = pageNum;

            if (pageNum === currentPage) {
                li.classList.add("active"); 
            }

            a.onclick = function (e) {
                e.preventDefault();
                currentPage = pageNum;
                displayRowsForPage(currentPage);
            };

            li.appendChild(a);
            paginationUl.insertBefore(li, nextBtn);
        }

        function filterEmployees() {
            const searchTerm = searchInput.value.toLowerCase();

            filteredRows = tableRows.filter(row => {
                const nameCell = row.getElementsByTagName("td")[2];
                const empeCodeCell = row.getElementsByTagName("td")[1];
                const emailCell = row.getElementsByTagName("td")[3];
                const roleCell = row.getElementsByTagName("td")[4];

                let matches = false;
                if (nameCell && nameCell.textContent.toLowerCase().includes(searchTerm)) matches = true;
                if (empeCodeCell && empeCodeCell.textContent.toLowerCase().includes(searchTerm)) matches = true;
                if (emailCell && emailCell.textContent.toLowerCase().includes(searchTerm)) matches = true;
                if (roleCell && roleCell.textContent.toLowerCase().includes(searchTerm)) matches = true;
                

                return matches;
            });

            currentPage = 1; 
            displayRowsForPage(currentPage);
        }

        prevBtn.addEventListener("click", function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                displayRowsForPage(currentPage);
            }
        });

        nextBtn.addEventListener("click", function (e) {
            e.preventDefault();
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                displayRowsForPage(currentPage);
            }
        });

        displayRowsForPage(currentPage);
        searchInput.addEventListener("keyup", filterEmployees);
    });
</script>